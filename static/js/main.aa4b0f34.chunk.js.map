{"version":3,"sources":["app/redux/reducers/urlReducer.js","app/redux/reducers/index.js","app/redux/types.js","app/redux/store.js","app/api/index.js","app/components/RandomAll.js","app/redux/actions/urlActions.js","app/App.js","index.jsx"],"names":["initialState","combineReducers","imageUrl","state","arguments","length","undefined","action","type","Object","objectSpread","url","payload","error","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","BASE_URL","RandomAll","this","props","fetchUrl","document","getElementById","select","execCommand","react_default","a","createElement","Fragment","className","onClick","copyUrl","alt","src","readOnly","value","Component","connect","dispatch","endpoint","concat","Promise","resolve","reject","axios","method","then","res","data","catch","err","dogAPI","response","message","App","components_RandomAll","render","es","src_app_App"],"mappings":"wOAEMA,EAAe,GCCNC,cAAgB,CAC7BC,SDAa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBJ,EAAcO,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IENqB,YFOnB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAEFN,EAFL,CAGEQ,IAAKJ,EAAOK,UAEhB,IEViB,QFWf,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEU,MAAON,EAAOK,UAElB,QACE,OAAOT,MGXPW,EAAa,CAACC,KAQLC,EANDC,YACZC,EALmB,GAOnBC,IAAeC,WAAf,EAAmBN,yDCVfO,EAAW,sBCEXC,8LAGFC,KAAKC,MAAMC,6CAKMC,SAASC,eAAe,OAChCC,SACTF,SAASG,YAAY,yCAIrB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,WAASE,UAAU,aACjBJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeC,QAASZ,KAAKa,SAA/C,cAGAN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,mBAAmBC,QAASZ,KAAKC,MAAMC,UAAzD,cAIFK,EAAAC,EAAAC,cAAA,WAASE,UAAU,aACjBJ,EAAAC,EAAAC,cAAA,OACEK,IAAI,GACJH,UAAU,MACVC,QAASZ,KAAKC,MAAMC,SACpBa,IAAKf,KAAKC,MAAMb,MAElBmB,EAAAC,EAAAC,cAAA,YAAUE,UAAU,UAAUK,UAAQ,EAACC,MAAOjB,KAAKC,MAAMb,eA/B3C8B,aA0CTC,cAJS,SAAAvC,GAAK,MAAK,CAChCQ,IAAKR,EAAMD,SAASS,MAGkB,CAAEc,SC3ClB,kBAAM,SAAAkB,IFCf,SAACC,GAAyB,IAAfJ,EAAepC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC5BO,EAAM,GACV,OAAQiC,GACN,IAAK,aACHjC,EAAG,GAAAkC,OAAMxB,EAAN,oBACH,MAEF,IAAK,aACHV,EAAG,GAAAkC,OAAMxB,EAAN,wBACH,MAEF,IAAK,eACHV,EAAG,GAAAkC,OAAMxB,EAAN,WAAAwB,OAAwBL,EAAxB,kBACH,MAEF,QACE7B,EAAG,GAAAkC,OAAMxB,EAAN,wBAKP,OAAO,IAAIyB,QAAQ,SAACC,EAASC,GAC3BC,IAAM,CACJC,OAAQ,MACRvC,IAAKA,IAEJwC,KAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIC,QACxBC,MAAM,SAAAC,GAAG,OAAIP,EAAOO,QE3BzBC,CAAO,UACJL,KAAK,SAAAM,GAAQ,OACZd,EAAS,CACPnC,KJPiB,YIQjBI,QAAS6C,EAASC,YAGrBJ,MAAM,SAAAzC,GAAK,OACV8B,EAAS,CACPnC,KJXa,QIYbI,QAASC,SDgCF6B,CAAuCpB,GE1BvCqC,0LAdX,OACE7B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,0CAEFF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4B,EAAD,eATQnB,oBCGlBoB,iBACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAU9C,MAAOA,GACfc,EAAAC,EAAAC,cAAC+B,EAAD,OAEFrC,SAASC,eAAe","file":"static/js/main.aa4b0f34.chunk.js","sourcesContent":["import { FETCH_URL, ERROR } from '../types';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_URL:\n      return {\n        // Spread existing state if any\n        ...state,\n        url: action.payload,\n      };\n    case ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport urlReducer from './urlReducer';\n\nexport default combineReducers({\n  imageUrl: urlReducer,\n});\n","export const FETCH_URL = 'FETCH_URL';\nexport const FETCH_BREEDS = 'FETCH_BREEDS';\nexport const ERROR = 'ERROR';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n// Initial state of app\nconst initialState = {};\n// Array of middleware\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer, // Main reducer linking all necessary reducer functions\n  initialState, // Initial state\n  applyMiddleware(...middleware), // Enhancers/middleware\n);\n\nexport default store;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://dog.ceo/api';\n\nexport default (endpoint, value = '') => {\n  let url = '';\n  switch (endpoint) {\n    case 'breed-list': {\n      url = `${BASE_URL}/breeds/list/all`;\n      break;\n    }\n    case 'random-all': {\n      url = `${BASE_URL}/breeds/image/random`;\n      break;\n    }\n    case 'random-breed': {\n      url = `${BASE_URL}/breed/${value}/images/random`;\n      break;\n    }\n    default: {\n      url = `${BASE_URL}/breeds/image/random`;\n      break;\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    axios({\n      method: 'GET',\n      url: url,\n    })\n      .then(res => resolve(res.data))\n      .catch(err => reject(err));\n  });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUrl } from '../redux/actions/urlActions';\n\nclass RandomAll extends Component {\n  // Initial fetch for first render\n  componentDidMount() {\n    this.props.fetchUrl();\n  }\n\n  // Copy URL from textarea element\n  copyUrl() {\n    const copyText = document.getElementById('url');\n    copyText.select();\n    document.execCommand('copy');\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"btn-group\">\n          <button className=\"btn btn-copy\" onClick={this.copyUrl}>\n            Copy Image\n          </button>\n          <button className=\"btn btn-generate\" onClick={this.props.fetchUrl}>\n            New Image\n          </button>\n        </section>\n        <section className=\"container\">\n          <img\n            alt=\"\"\n            className=\"img\"\n            onClick={this.props.fetchUrl}\n            src={this.props.url}\n          />\n          <textarea className=\"img-url\" readOnly value={this.props.url} />\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  url: state.imageUrl.url,\n});\n\nexport default connect(mapStateToProps, { fetchUrl })(RandomAll);\n","import { FETCH_URL, ERROR } from '../types';\nimport dogAPI from '../../api';\n\nexport const fetchUrl = () => dispatch => {\n  dogAPI('random')\n    .then(response =>\n      dispatch({\n        type: FETCH_URL,\n        payload: response.message,\n      }),\n    )\n    .catch(error =>\n      dispatch({\n        type: ERROR,\n        payload: error,\n      }),\n    );\n};\n","import React, { Component } from 'react';\nimport RandomAll from './components/RandomAll';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <header className=\"header\">\n          <h1>Floof</h1>\n          <small>Discover all the doggos.</small>\n        </header>\n        <main>\n          <RandomAll />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/redux/store';\nimport App from './app/App';\nimport './index.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}